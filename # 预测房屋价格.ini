# 线性回归案例：预测房屋价格
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error

# 生成模拟数据：房屋面积 (平方英尺) 和价格 (单位：万元)
np.random.seed(42)
area = np.random.rand(100) * 100  # 房屋面积
price = area * 3 + np.random.randn(100) * 10  # 房屋价格 (带噪声)

# 数据可视化
plt.scatter(area, price, color='blue', label='数据点')
plt.xlabel('房屋面积 (平方英尺)')
plt.ylabel('房屋价格 (万元)')
plt.title('房屋面积与价格关系')
plt.legend()
plt.show()

# 数据集拆分为训练集和测试集
X = area.reshape(-1, 1)  # 特征 (房屋面积)
y = price  # 目标值 (房屋价格)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 创建线性回归模型并训练
model = LinearRegression()
model.fit(X_train, y_train)

# 模型预测
y_pred = model.predict(X_test)

# 输出模型参数
print(f"回归系数 (斜率): {model.coef_[0]:.2f}")
print(f"截距: {model.intercept_:.2f}")
print(f"均方误差 (MSE): {mean_squared_error(y_test, y_pred):.2f}")

# 可视化回归结果
plt.scatter(X_test, y_test, color='blue', label='真实值')
plt.plot(X_test, y_pred, color='red', label='预测值')
plt.xlabel('房屋面积 (平方英尺)')
plt.ylabel('房屋价格 (万元)')
plt.title('线性回归预测结果')
plt.legend()
plt.show()